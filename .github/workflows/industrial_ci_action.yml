# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

# ros2 run industrial_ci rerun_ci ~/code/moveit2/ws_moveit2/src/moveit_calibration \
#   DOCKER_IMAGE='moveit/moveit:melodic-source' \
#   UPSTREAM_WORKSPACE='upstream.rosinstall' \
#   BEFORE_INSTALL_UPSTREAM_DEPENDENCIES_EMBED='set +u && source /root/ws_moveit/install/setup.bash && set -u' \
#   UNDERLAY='/root/ws_moveit' \
#   TARGET_CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=1" \
#   CCACHE_DIR=".ccache" \
#   CLANG_TIDY=true \
#   CLANG_TIDY_BASE_REF=master

name: BuildAndTest

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  industrial_ci:
    env:
      DOCKER_IMAGE: 'moveit/moveit:melodic-source'
      UPSTREAM_WORKSPACE: 'upstream.rosinstall'
      AFTER_RUN_TARGET_TEST: './.ci.prepare_codecov'
      TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS='--coverage' -DCMAKE_CXX_FLAGS='--coverage'"
      ADDITIONAL_DEBS: 'lcov'
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
      BASEDIR: ${{ github.workspace }}/.work
      UNDERLAY: /root/ws_moveit
      CLANG_TIDY: true
      CLANG_TIDY_BASE_REF: 'master'
      
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache upstream_ws
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.BASEDIR }}/upstream_ws
          key: upstream_ws-${{ hashFiles('upstream.repos') }}-${{ github.run_id }}
          restore-keys: |
            upstream_ws-${{ hashFiles('upstream.repos') }}
      - name: cache target_ws
        if: ${{ ! env.CCOV }}
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.BASEDIR }}/target_ws
          key: target_ws-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}-${{ github.run_id }}
          restore-keys: |
            target_ws-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}
      - name: cache ccache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ github.sha }}
            ccache
      - name: industrial_ci
        uses: 'tylerjw/industrial_ci@clang-tidy-modified-filter'
      - name: upload test artifacts (on failure)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: ${{ env.BASEDIR }}/target_ws/**/test_results/**/*.xml
      - name: upload codecov report
        uses: codecov/codecov-action@v1
        if: ${{ env.CCOV }}
        with:
          files: ${{ env.BASEDIR }}/coverage.info
      - name: prepare target_ws for cache
        if: ${{ always() && ! env.CCOV }}
        run: |
          du -sh ${{ env.BASEDIR }}/target_ws
          sudo find ${{ env.BASEDIR }}/target_ws -wholename '*/test_results/*' -delete
          sudo rm -rf ${{ env.BASEDIR }}/target_ws/src
          du -sh ${{ env.BASEDIR }}/target_ws
